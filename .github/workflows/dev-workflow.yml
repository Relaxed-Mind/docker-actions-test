name: Dev Workflow
on:
  push:
    branches:
      - test
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: 저장소 Checkout
        uses: actions/checkout@v3

      ## create .yml
      - name: make application.yml
        run: |
          mkdir -p src/main/resources
          touch ./src/main/resources/application.yml
          echo "${{ secrets.APPLICATION }}" >> ./src/main/resources/application.yml

      ## create prod.yml
      - name: make application-prod.yml
        run: |
          touch src/main/resources/application-prod.yml
          echo "${{ secrets.APPLICATION_PROD }}" >> src/main/resources/application-prod.yml

      - name: 스프링부트 애플리케이션 빌드
        run: ./gradlew bootJar

      - name: 도커 이미지 빌드
        run: docker build -t ${{ secrets.DOCKER_REPO }}/action-test --platform linux/amd64 .

      - name: nginx 이미지 빌드
        run: |
          cd nginx
          docker build -t ${{ secrets.DOCKER_REPO }}/nginx-proxy -f Dockerfile.prod .

      - name: 도커 로그인
        uses: docker/login-action@v2
        with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 도커 이미지 push
        run: |
          docker push ${{ secrets.DOCKER_REPO }}/action-test
          docker push ${{ secrets.DOCKER_REPO }}/nginx-proxy

      - name: 배포
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            docker stop $(docker ps -a -q) 
            docker rm -f $(docker ps -qa)
            docker pull ${{ secrets.DOCKER_REPO }}/action-test
            docker pull ${{ secrets.DOCKER_REPO }}/nginx-proxy
            docker-compose -f docker-compose-prod.yml up -d --build
            docker image prune -f
  
